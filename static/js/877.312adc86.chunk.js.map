{"version":3,"file":"static/js/877.312adc86.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?23b5","Components/Profile/ProfileInfo/ProfileStatus.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/Components/Profile/MyPosts/MyPosts.module.css?bd90","webpack://samurai-way/./src/Components/Profile/MyPosts/Post/Post.module.css?54ab","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/MyPosts/MyPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"info\":\"ProfileInfo_info__NanvH\",\"UserProfileContainer\":\"ProfileInfo_UserProfileContainer__-yhuy\",\"about\":\"ProfileInfo_about__y74Jb\"};","import React, {ChangeEvent, Component} from \"react\";\r\n\r\ntype ProfileStatusPropsType = {\r\n    status : string\r\n    updateStatus : (status : string) => void\r\n}\r\n\r\n\r\nclass ProfileStatus extends Component<ProfileStatusPropsType>{\r\n   state = {\r\n        editMode : false,\r\n       status : this.props.status\r\n    }\r\n    activateEditMode (){\r\n        this.setState({\r\n            editMode : true\r\n        })\r\n    }\r\n    deactivateEditMode (){\r\n        this.setState({\r\n            editMode : false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    changeInputStatus(e: ChangeEvent<HTMLInputElement>){\r\n       this.setState({\r\n           status : e.currentTarget.value\r\n       })\r\n    }\r\n\r\n\r\n    render(){\r\n      return (\r\n          <div>\r\n              {this.state.editMode ?\r\n                  <input onChange={this.changeInputStatus.bind(this)} autoFocus onBlur={this.deactivateEditMode.bind(this)} value={this.state.status}/>\r\n                  :\r\n                  <span onDoubleClick={this.activateEditMode.bind(this)}>{this.props.status}</span>\r\n\r\n              }\r\n\r\n\r\n          </div>\r\n      )\r\n    }\r\n}\r\nexport default ProfileStatus;","import pi from \"./ProfileInfo.module.css\"\r\nimport React from \"react\";\r\nimport {ProfileType} from \"../../../State/profileReducer/profileReducer\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\ntype ProfileInfoProps = {\r\n    profile : ProfileType | null\r\n    status : string\r\n    updateStatus : (status : string) => void\r\n}\r\n\r\n\r\n\r\nexport const ProfileInfo = (props: ProfileInfoProps) => {\r\n\r\n    return (\r\n        <div>\r\n            {/*<div>*/}\r\n            {/*    <img*/}\r\n            {/*        src=\"https://img.freepik.com/premium-photo/beautiful-emerald-lake-yoho-national-park-british-columbia-canada_131985-177.jpg?w=2000\"*/}\r\n            {/*        alt=\"\"/>*/}\r\n            {/*</div>*/}\r\n            <div className={pi.UserProfileContainer}>\r\n                <div>\r\n                    <img src={props.profile?.photos?.small} alt=\"\" style={{ width : \"100px\", height : \"100px\"}}/>\r\n                     <p>{props.profile?.fullName}</p>\r\n                </div>\r\n               <div className={pi.about}>\r\n                   <p>{props.profile?.aboutMe}</p>\r\n                   <p>{props.profile?.contacts.vk}</p>\r\n                   <p>{props.profile?.contacts.instagram}</p>\r\n               </div>\r\n            </div>\r\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            <div className={pi.info}>ava + description</div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__fxAN9\",\"postsBlock\":\"MyPosts_postsBlock__LUJTe\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__kABFP\"};","import React from \"react\";\r\nimport p from \"./Post.module.css\"\r\n\r\ntype postPropsType = {\r\n    text: string,\r\n    likes: number\r\n}\r\nexport const Post = (props:postPropsType) => {\r\n    return (\r\n\r\n                    <div className={p.item}>\r\n                        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTlN3t6jSZRh1yCgUUPPoXD0blY8by9_JMk_bGC_orS&s\" alt=\"\"/>\r\n                        {props.text}\r\n                        <div>\r\n                            <span>like</span> {props.likes}\r\n                        </div>\r\n                    </div>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport p from \"./MyPosts.module.css\"\r\nimport {Post} from \"./Post/Post\";\r\nimport {PostsPropsType} from \"./MyPostsContainer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLenCreator, maxLength30, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../../utils/fromControl/FormsControl\";\r\n\r\n\r\n\r\n\r\nexport const MyPosts = (props : PostsPropsType) => {\r\n    const addPost = (formData: AddPostFormPropsType) => {\r\n       props.addPost(formData.newPost)\r\n    }\r\n    let postRender = props.profilePage.posts.map(post => <Post key={post.id} text={post.message} likes={post.likesCount}/>)\r\n    return (\r\n        <div className={p.postsBlock}><h3>my posts</h3>\r\n            <AddPostFormRedux onSubmit={addPost}/>\r\n            <div className={p.posts}>\r\n                {postRender}\r\n            </div>\r\n        </div>)}\r\n\r\nconst AddPostForm = (props : InjectedFormProps<AddPostFormPropsType>) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div> <Field component={TextArea} name={\"newPost\"} placeholder={\"newPost\"}\r\n             validate={[required, maxLength30]}\r\n            /> </div>\r\n            <button>add post</button>\r\n        </form>\r\n    )\r\n}\r\nconst AddPostFormRedux = reduxForm<AddPostFormPropsType>({\r\n    form : \"newPost\"\r\n})(AddPostForm)\r\n\r\n//TYPES\r\ntype AddPostFormPropsType = {\r\n    newPost : string\r\n}\r\n","import React from \"react\";\r\n\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {AppRootStateType} from \"../../../State/Redux-Store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {addPostAC, ProfilePageType} from \"../../../State/profileReducer/profileReducer\";\r\n\r\ntype MapDispatchToPostsProps = {\r\n    addPost : (newPostText:string) => void\r\n}\r\ntype MapStateToPostsProps = {\r\n    profilePage : ProfilePageType\r\n}\r\n\r\nexport type PostsPropsType =  MapStateToPostsProps & MapDispatchToPostsProps\r\nlet mapStateToPostsProps = (state :AppRootStateType ) : MapStateToPostsProps => {\r\n    return {\r\n      profilePage : state.profileReducer\r\n    }\r\n}\r\nlet mapDispatchToPostsProps = (dispatch : Dispatch) : MapDispatchToPostsProps => {\r\n    return {\r\n        addPost : (newPostText : string) => { dispatch(addPostAC(newPostText)) },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToPostsProps,mapDispatchToPostsProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport p from \"./Profile.module.css\"\r\nimport { ProfileInfo } from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../State/profileReducer/profileReducer\";\r\n\r\ntype ProfilePropsType = {\r\n    profile : ProfileType | null,\r\n    status : string,\r\n    updateStatus : (status : string) => void\r\n}\r\n\r\nexport const Profile = (props : ProfilePropsType) => {\r\n\r\n    return (\r\n        <div className={p.profile}> \r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n            {/*<MyPosts  newPostText={props.newPostText}  postData={props.postData} />*/}\r\n        </div>\r\n    )\r\n}","import React, {Component, ComponentType} from 'react';\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusThunkCreator,\r\n    getUserProfileThunkCreator,\r\n    ProfileType,\r\n    updateStatusThunkCreator\r\n} from \"../../State/profileReducer/profileReducer\";\r\nimport {AppRootStateType} from \"../../State/Redux-Store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from '../../HOC/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\nclass ProfileContainer extends Component <WithRouterComponentType> {\r\n    componentDidMount() {\r\n        let userId : number = +this.props.match.params.userId\r\n        if(!userId){\r\n            userId = 28058\r\n        }\r\n        console.log(userId)\r\n       this.props.getUserProfileThunkCreator(userId)\r\n        this.props.getStatusThunkCreator(userId)\r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}  profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatusThunkCreator}/>\r\n        );\r\n    }\r\n}\r\ntype PathParamsType = {\r\n    userId : string\r\n}\r\ntype WithRouterComponentType = RouteComponentProps<PathParamsType> & ProfileContainerProps\r\ntype MapStateToPropsType = {\r\n    profile : ProfileType | null\r\n    status : string\r\n}\r\ntype MapDispatchToPropsType = {\r\n    getUserProfileThunkCreator : (userId : number) => void\r\n    getStatusThunkCreator : (userId : number) => void\r\n    updateStatusThunkCreator : (status : string) => void\r\n}\r\n\r\ntype ProfileContainerProps = MapStateToPropsType & MapDispatchToPropsType\r\nlet mapStateToProps = (state : AppRootStateType) : MapStateToPropsType => {\r\n    return {\r\n        profile : state.profileReducer.profile,\r\n        status : state.profileReducer.status\r\n    }\r\n}\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {getUserProfileThunkCreator,getStatusThunkCreator,updateStatusThunkCreator }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n"],"names":["ProfileStatus","state","editMode","status","props","this","setState","updateStatus","e","currentTarget","value","onChange","changeInputStatus","bind","autoFocus","onBlur","deactivateEditMode","onDoubleClick","activateEditMode","Component","ProfileInfo","className","pi","src","profile","photos","small","alt","style","width","height","fullName","aboutMe","contacts","vk","instagram","Post","p","text","likes","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","name","placeholder","validate","required","maxLength30","connect","profilePage","profileReducer","dispatch","addPost","newPostText","addPostAC","postRender","posts","map","post","message","likesCount","id","formData","newPost","Profile","ProfileContainer","userId","match","params","console","log","getUserProfileThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","compose","withRouter","withAuthRedirect"],"sourceRoot":""}